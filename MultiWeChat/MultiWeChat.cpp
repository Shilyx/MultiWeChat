/*
 *  @file  : MultiWeChat.cpp
 *  @author: Shilyx
 *  @date  : 2016-08-13 21:47:13.206
 *  @note  : Generated by SlxTemplates
 */

#include <Windows.h>
#include "../WeChat.h"
#include <CommCtrl.h>
#pragma warning(disable: 4786)
#include <tchar.h>
#include "resource.h"

class CMultiWeChatDialog
{
#define MULTIWECHAT_OBJECT_PROP_NAME TEXT("__MultiWeChatObject")

public:
    CMultiWeChatDialog(HINSTANCE hInstance, LPCTSTR lpTemplate, HWND hParent)
        : m_hInstance(hInstance)
        , m_lpTemplate(lpTemplate)
        , m_hwndDlg(NULL)
        , m_hParent(hParent)
        , m_bModalDlg(TRUE)
    {
    }

    INT_PTR DoModel()
    {
        m_bModalDlg = TRUE;
        return DialogBoxParam(m_hInstance, m_lpTemplate, m_hParent, MultiWeChatDialogProc, (LPARAM)this);
    }

    int Run(int nShowCmd)
    {
        m_bModalDlg = FALSE;
        HWND hwndDlg = CreateDialogParam(m_hInstance, m_lpTemplate, m_hParent, MultiWeChatDialogProc, (LPARAM)this);

        if (IsWindow(hwndDlg))
        {
            ShowWindow(hwndDlg, nShowCmd);
            UpdateWindow(hwndDlg);

            MSG msg;

            while (TRUE)
            {
                int nRet = GetMessage(&msg, NULL, 0, 0);

                if (nRet < 0)
                {
                    break;
                }

                if (nRet == 0)
                {
                    return (int)msg.wParam;
                }

                if (!IsDialogMessage(hwndDlg, &msg))
                {
                    TranslateMessage(&msg);
                    DispatchMessage(&msg);
                }
            }
        }

        return 0;
    }

private:
    static INT_PTR CALLBACK MultiWeChatDialogProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam)
    {
        if (uMsg == WM_INITDIALOG)
        {
            SetProp(hwndDlg, MULTIWECHAT_OBJECT_PROP_NAME, (HANDLE)lParam);
        }

        CMultiWeChatDialog *pMultiWeChatDialog = (CMultiWeChatDialog *)GetProp(hwndDlg, MULTIWECHAT_OBJECT_PROP_NAME);

        if (pMultiWeChatDialog != NULL)
        {
            return pMultiWeChatDialog->MultiWeChatDialogPrivateProc(hwndDlg, uMsg, wParam, lParam);
        }

        return FALSE;
    }

    INT_PTR CALLBACK MultiWeChatDialogPrivateProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam)
    {
        switch (uMsg)
        {
        case WM_INITDIALOG:{
            HICON hIcon = LoadIcon(m_hInstance, MAKEINTRESOURCE(IDI_MAINFRAME));

            SendMessage(hwndDlg, WM_SETICON, ICON_BIG, (LPARAM)hIcon);
            SendMessage(hwndDlg, WM_SETICON, ICON_SMALL, (LPARAM)hIcon);

            m_hwndDlg = hwndDlg;
            OnInitDialog();

            break;}

        case WM_CLOSE:
            if (m_bModalDlg)
            {
                RemoveProp(hwndDlg, MULTIWECHAT_OBJECT_PROP_NAME);
                EndDialog(hwndDlg, 0);
            }
            else
            {
                DestroyWindow(hwndDlg);
            }
            break;

        case WM_DESTROY:
            if (!m_bModalDlg)
            {
                PostQuitMessage(0);
                RemoveProp(hwndDlg, MULTIWECHAT_OBJECT_PROP_NAME);
            }
            break;

        default:
            break;
        }

        return FALSE;
    }

    void OnInitDialog()
    {
        EnableMultiWeChat();
    }

private:
    BOOL m_bModalDlg;
    HWND m_hwndDlg;
    HWND m_hParent;
    HINSTANCE m_hInstance;
    LPCTSTR m_lpTemplate;
};

int APIENTRY _tWinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int nShowCmd)
{
    InitCommonControls();
    return (int)CMultiWeChatDialog(hInstance, MAKEINTRESOURCE(IDD_DIALOG), NULL).Run(SW_HIDE);
}